import { playSound } from './audio.js';

// –ó–∞–¥–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞
const classTasks = {
    1: [
        {
            description: "–î–µ—Ä–µ–≤–æ (–Ω–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –±—É–∫–≤—ã) + –Ω—è. –ß—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å?",
            answer: "–¥–µ—Ä–µ–≤–Ω—è",
            content: `<div class="task-content">
                <div class="word-part">–¥–µ—Ä–µ–≤<span class="missing-letter">–æ</span> + –Ω—è = </div>
                <div class="answer-hint">?</div>
            </div>`
        },
        {
            description: "–û–±—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —è–±–ª–æ–∫, –≥—Ä—É—à –∏ –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤?",
            answer: "—Ñ—Ä—É–∫—Ç—ã",
            content: `<div class="task-content">
                <div class="fruit-images">
                    <div class="fruit">üçé</div>
                    <div class="fruit">üçê</div>
                    <div class="fruit">üçä</div>
                </div>
                <div class="answer-hint">–ß—Ç–æ —ç—Ç–æ –≤–º–µ—Å—Ç–µ?</div>
            </div>`
        },
        {
            description: "–°–æ–±–µ—Ä–∏ —Å–ª–æ–≤–æ –∏–∑ —Å–ª–æ–≥–æ–≤: –º–∞ + —à–∏ + –Ω–∞",
            answer: "–º–∞—à–∏–Ω–∞",
            content: `<div class="task-content">
                <div class="syllables">
                    <span class="syllable">–º–∞</span>
                    <span class="syllable-operator">+</span>
                    <span class="syllable">—à–∏</span>
                    <span class="syllable-operator">+</span>
                    <span class="syllable">–Ω–∞</span>
                    <span class="syllable-operator">=</span>
                    <span class="answer-hint">?</span>
                </div>
            </div>`
        }
    ],
    2: [
        {
            description: "–ü—Ä–æ—á–∏—Ç–∞–π —Å–ª–æ–≤–æ –Ω–∞–æ–±–æ—Ä–æ—Ç: –¢–û–ö",
            answer: "–∫–æ—Ç",
            content: `<div class="task-content">
                <div class="reverse-word">–¢ –û –ö ‚Üí <span class="reverse-arrow">‚áÑ</span> </div>
                <div class="answer-hint">?</div>
            </div>`
        },
        {
            description: "–†–∞—Å—à–∏—Ñ—Ä—É–π —Å–ª–æ–≤–æ –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏—Ñ—Ä—ã: 5 + 6 + 14",
            answer: "–¥–æ–º",
            content: `<div class="task-content">
                <div class="alphabet-task">
                    <table class="alphabet-table">
                        <tr>
                            <td>1-–∞</td><td>2-–±</td><td>3-–≤</td><td>4-–≥</td><td>5-–¥</td>
                        </tr>
                        <tr>
                            <td>6-–µ</td><td>7-—ë</td><td>8-–∂</td><td>9-–∑</td><td>10-–∏</td>
                        </tr>
                        <tr>
                            <td>11-–π</td><td>12-–∫</td><td>13-–ª</td><td>14-–º</td><td>15-–Ω</td>
                        </tr>
                    </table>
                    <div class="code-task">5 + 6 + 14 = ?</div>
                </div>
            </div>`
        },
        {
            description: "–ü—Ä–æ—á–∏—Ç–∞–π —Å–ª–æ–≤–æ –Ω–∞–æ–±–æ—Ä–æ—Ç: –ê–ù–ò–®–ê–ú",
            answer: "–º–∞—à–∏–Ω–∞",
            content: `<div class="task-content">
                <div class="reverse-word">–ê –ù –ò –® –ê –ú ‚Üí <span class="reverse-arrow">‚áÑ</span> </div>
                <div class="answer-hint">?</div>
            </div>`
        }
    ],
    3: [
        {
            description: "–°–ª–æ–Ω –±–µ–∑ –±—É–∫–≤—ã –õ. –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è?",
            answer: "—Å–æ–Ω",
            content: `<div class="task-content">
                <div class="word-with-missing-letter">
                    <span class="animal-emoji">üêò</span>
                    <span class="minus">-</span>
                    <span class="missing-letter">–ª</span>
                    <span class="equals">=</span>
                    <span class="answer-hint">?</span>
                </div>
            </div>`
        },
        {
            description: "–†–∞—Å—à–∏—Ñ—Ä—É–π —Å–ª–æ–≤–æ: –≤—Ñ–ª–≥–±",
            answer: "–±—É–∫–≤–∞",
            content: `<div class="task-content">
                <div class="encoded-word">
                    <span class="encoded-letter">–≤</span>
                    <span class="encoded-letter">—Ñ</span>
                    <span class="encoded-letter">–ª</span>
                    <span class="encoded-letter">–≥</span>
                    <span class="encoded-letter">–±</span>
                </div>
                <div class="hint">–ö–∞–∂–¥–∞—è –±—É–∫–≤–∞ - –ø—Ä–µ–¥—ã–¥—É—â–∞—è –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ</div>
            </div>`
        },
        {
            description: "–†–∞—Å—à–∏—Ñ—Ä—É–π –∞–Ω–∞–≥—Ä–∞–º–º—É. –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è?",
            answer: "–∫–∞–º—ã—à",
            content: `<div class="task-content">
                <div class="reverse-word">
                    <span class="animal-emoji">üê≠</span>
                    <span class="word">–º—ã—à–∫–∞</span>
                    <span class="reverse-arrow">‚áÑ</span>
                </div>
                <div class="answer-hint">?</div>
            </div>`
        }
    ],
    4: [
        {
            description: "–†–∞—Å—à–∏—Ñ—Ä—É–π —Å–ª–æ–≤–æ: –±–∏–≤—Ñ–ª–±",
            answer: "–∞–∑–±—É–∫–∞",
            content: `<div class="task-content">
                <div class="encoded-word">
                    <span class="encoded-letter">–±</span>
                    <span class="encoded-letter">–∏</span>
                    <span class="encoded-letter">–≤</span>
                    <span class="encoded-letter">—Ñ</span>
                    <span class="encoded-letter">–ª</span>
                    <span class="encoded-letter">–±</span>
                </div>
                <div class="hint">–ö–∞–∂–¥–∞—è –±—É–∫–≤–∞ - –ø—Ä–µ–¥—ã–¥—É—â–∞—è –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ</div>
            </div>`
        },
        {
            description: "–†–∞—Å—à–∏—Ñ—Ä—É–π –∞–Ω–∞–≥—Ä–∞–º–º—É. –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è?",
            answer: "–∫–æ—Ä—à—É–Ω",
            content: `<div class="task-content">
                <div class="reverse-word">
                    <span class="word">—à–Ω—É—Ä–æ–∫</span>
                    <span class="reverse-arrow">‚áÑ</span>
                </div>
                <div class="answer-hint">?</div>
            </div>`
        },
        {
            description: "–í—Å—Ç–∞–≤—å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –±—É–∫–≤—ã: –∫*—Ä*–≤*",
            answer: "–∫–æ—Ä–æ–≤–∞",
            content: `<div class="task-content">
                <div class="word-with-gaps">
                    <span class="letter">–∫</span>
                    <span class="gap">*</span>
                    <span class="letter">—Ä</span>
                    <span class="gap">*</span>
                    <span class="letter">–≤</span>
                    <span class="gap">*</span>
                </div>
                <div class="hint">–î–æ–º–∞—à–Ω–µ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ</div>
            </div>`
        }
    ]
};

let currentClass = 1;
let currentTaskIndex = 0;
let tasks = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
export function initGame(grade) {
    currentClass = grade;
    currentTaskIndex = 0;
    tasks = classTasks[grade] || [];

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    document.getElementById('class-number').textContent = grade;
    document.getElementById('total-tasks').textContent = tasks.length;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ
    showTask(currentTaskIndex);

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
    document.getElementById('check-answer-btn').addEventListener('click', checkAnswer);

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ Enter)
    document.getElementById('answer-input').addEventListener('keypress', function (e) {
        if (e.key === 'Enter') {
            checkAnswer();
        }
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ
function showTask(index) {
    if (index >= tasks.length) {
        // –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
        showSuccess();
        return;
    }

    const task = tasks[index];
    const taskContainer = document.getElementById('task-container');
    const taskDescription = document.getElementById('task-description');
    const currentTaskElement = document.getElementById('current-task');
    const progressFill = document.getElementById('progress-fill');

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    taskDescription.textContent = task.description;

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–¥–∞–Ω–∏—è
    taskContainer.innerHTML = task.content;

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    currentTaskElement.textContent = index + 1;
    progressFill.style.width = `${(index / tasks.length) * 100}%`;

    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –Ω–µ–º
    const answerInput = document.getElementById('answer-input');
    answerInput.value = '';
    answerInput.focus();
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç
function checkAnswer() {
    const answerInput = document.getElementById('answer-input');
    const userAnswer = answerInput.value.trim().toLowerCase();
    const correctAnswer = tasks[currentTaskIndex].answer.toLowerCase();

    if (userAnswer === correctAnswer) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        playSound('assets/audio/effects/success.mp3');
        currentTaskIndex++;
        showTask(currentTaskIndex);
    } else {
        // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        playSound('assets/audio/effects/error.mp3');
        answerInput.classList.add('error');
        setTimeout(() => {
            answerInput.classList.remove('error');
        }, 1000);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
function showSuccess() {
    const successMessage = document.getElementById('success-message');
    if (!successMessage) return;

    successMessage.style.display = 'block';

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
    createConfetti();

    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ –ø–æ–±–µ–¥—ã
    playSound('assets/audio/effects/victory.mp3');

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å –µ—â–µ"
    document.querySelector('.play-again-btn').addEventListener('click', () => {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–ª–∞—Å—Å–∞
        import('./router.js').then(module => {
            module.navigateTo('class-select');
        });
    });
}

// –°–æ–∑–¥–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
function createConfetti() {
    const colors = ['#FF6B6B', '#4ECDC4', '#FFE66D', '#6B5B95', '#88D8B0'];
    const container = document.querySelector('.game-area');

    for (let i = 0; i < 50; i++) {
        const confetti = document.createElement('div');
        confetti.className = 'confetti';
        confetti.style.left = Math.random() * 100 + '%';
        confetti.style.top = Math.random() * 100 + '%';
        confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
        confetti.style.width = Math.random() * 10 + 5 + 'px';
        confetti.style.height = Math.random() * 10 + 5 + 'px';
        confetti.style.borderRadius = Math.random() > 0.5 ? '50%' : '0';

        container.appendChild(confetti);

        // –ê–Ω–∏–º–∞—Ü–∏—è
        setTimeout(() => {
            confetti.style.opacity = '1';
            confetti.style.transition = 'all 1s ease-out';
            confetti.style.transform = `translate(${Math.random() * 100 - 50}px, ${Math.random() * 100 - 50}px) rotate(${Math.random() * 360}deg)`;
            confetti.style.opacity = '0';
        }, 10);

        // –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            confetti.remove();
        }, 1100);
    }
}